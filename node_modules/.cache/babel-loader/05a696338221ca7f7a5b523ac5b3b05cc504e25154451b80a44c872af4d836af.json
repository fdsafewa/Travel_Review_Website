{"ast":null,"code":"// jquery.tweet.js - See http://tweet.seaofclouds.com/ or https://github.com/seaofclouds/tweet for more info\n// Copyright (c) 2008-2012 Todd Matthews & Steve Purcell\n// Modified by Stan Scates for https://github.com/StanScates/Tweet.js-Mod\n(function(factory){if(typeof define==='function'&&define.amd)define(['jquery'],factory);// AMD support for RequireJS etc.\nelse factory(jQuery);})(function($){$.fn.tweet=function(o){var s=$.extend({modpath:\"php/twitter/cws_tweet.php\",// [string]\t relative URL to Tweet.js mod (see https://github.com/StanScates/Tweet.js-Mod)\nusername:null,// [string or array] required unless using the 'query' option; one or more twitter screen names (use 'list' option for multiple names, where possible)\nlist_id:null,// [integer]\tID of list to fetch when using list functionality\nlist:null,// [string]\t optional slug of list belonging to username\nfavorites:false,// [boolean]\tdisplay the user's favorites instead of his tweets\nquery:null,// [string]\t optional search query (see also: http://search.twitter.com/operators)\navatar_size:null,// [integer]\theight and width of avatar if displayed (48px max)\ncount:3,// [integer]\thow many tweets to display?\nfetch:null,// [integer]\thow many tweets to fetch via the API (set this higher than 'count' if using the 'filter' option)\npage:1,// [integer]\twhich page of results to fetch (if count != fetch, you'll get unexpected results)\nretweets:true,// [boolean]\twhether to fetch (official) retweets (not supported in all display modes)\nintro_text:null,// [string]\t do you want text BEFORE your your tweets?\noutro_text:null,// [string]\t do you want text AFTER your tweets?\njoin_text:null,// [string]\t optional text in between date and tweet, try setting to \"auto\"\nauto_join_text_default:\"i said,\",// [string]\t auto text for non verb: \"i said\" bullocks\nauto_join_text_ed:\"i\",// [string]\t auto text for past tense: \"i\" surfed\nauto_join_text_ing:\"i am\",// [string]\t auto tense for present tense: \"i was\" surfing\nauto_join_text_reply:\"i replied to\",// [string]\t auto tense for replies: \"i replied to\" @someone \"with\"\nauto_join_text_url:\"i was looking at\",// [string]\t auto tense for urls: \"i was looking at\" http:...\nloading_text:null,// [string]\t optional loading text, displayed while tweets load\nrefresh_interval:null,// [integer]\toptional number of seconds after which to reload tweets\ntwitter_url:\"twitter.com\",// [string]\t custom twitter url, if any (apigee, etc.)\ntwitter_api_url:\"api.twitter.com\",// [string]\t custom twitter api url, if any (apigee, etc.)\ntwitter_search_url:\"api.twitter.com\",// [string]\t custom twitter search url, if any (apigee, etc.)\ntemplate:\"{avatar}{time}{join}{text}\",// [string or function] template used to construct each tweet <li> - see code for available vars\ncomparator:function(tweet1,tweet2){// [function] comparator used to sort tweets (see Array.sort)\nreturn tweet2[\"tweet_time\"]-tweet1[\"tweet_time\"];},filter:function(tweet){// [function] whether or not to include a particular tweet (be sure to also set 'fetch')\nreturn true;}// You can attach callbacks to the following events using jQuery's standard .bind() mechanism:\n//\t \"loaded\" -- triggered when tweets have been fetched and rendered\n},o);// See http://daringfireball.net/2010/07/improved_regex_for_matching_urls\nvar url_regexp=/\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/gi;// Expand values inside simple string templates with {placeholders}\nfunction t(template,info){if(typeof template===\"string\"){var result=template;for(var key in info){var val=info[key];result=result.replace(new RegExp('{'+key+'}','g'),val===null?'':val);}return result;}else return template(info);}// Export the t function for use when passing a function as the 'template' option\n$.extend({tweet:{t:t}});function replacer(regex,replacement){return function(){var returning=[];this.each(function(){returning.push(this.replace(regex,replacement));});return $(returning);};}function escapeHTML(s){return s.replace(/</g,\"&lt;\").replace(/>/g,\"^&gt;\");}$.fn.extend({linkUser:replacer(/(^|[\\W])@(\\w+)/gi,\"$1<span class=\\\"at\\\">@</span><a href=\\\"http://\"+s.twitter_url+\"/$2\\\">$2</a>\"),// Support various latin1 (\\u00**) and arabic (\\u06**) alphanumeric chars\nlinkHash:replacer(/(?:^| )[\\#]+([\\w\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u00ff\\u0600-\\u06ff]+)/gi,' <a href=\"https://twitter.com/search?q=%23$1'+(s.username&&s.username.length==1&&!s.list?'&from='+s.username.join(\"%2BOR%2B\"):'')+'\" class=\"tweet_hashtag\">#$1</a>'),makeHeart:replacer(/(&lt;)+[3]/gi,\"<tt class='heart'>&#x2665;</tt>\")});function linkURLs(text,entities){return text.replace(url_regexp,function(match){var url=/^[a-z]+:/i.test(match)?match:\"http://\"+match;var text=match;for(var i=0;i<entities.length;++i){var entity=entities[i];if(entity.url==url&&entity.expanded_url){url=entity.expanded_url;text=entity.display_url;break;}}return\"<a href=\\\"\"+escapeHTML(url)+\"\\\">\"+escapeHTML(text)+\"</a>\";});}function parse_date(date_str){// The non-search twitter APIs return inconsistently-formatted dates, which Date.parse\n// cannot handle in IE. We therefore perform the following transformation:\n// \"Wed Apr 29 08:53:31 +0000 2009\" => \"Wed, Apr 29 2009 08:53:31 +0000\"\nreturn Date.parse(date_str.replace(/^([a-z]{3})( [a-z]{3} \\d\\d?)(.*)( \\d{4})$/i,'$1,$2$4$3'));}function relative_time(date){var relative_to=arguments.length>1?arguments[1]:new Date();var delta=parseInt((relative_to.getTime()-date)/1000,10);var r='';if(delta<1){r='just now';}else if(delta<60){r=delta+' seconds ago';}else if(delta<120){r='about a minute ago';}else if(delta<45*60){r='about '+parseInt(delta/60,10).toString()+' minutes ago';}else if(delta<2*60*60){r='about an hour ago';}else if(delta<24*60*60){r='about '+parseInt(delta/3600,10).toString()+' hours ago';}else if(delta<48*60*60){r='about a day ago';}else{r='about '+parseInt(delta/86400,10).toString()+' days ago';}return r;}function build_auto_join_text(text){if(text.match(/^(@([A-Za-z0-9-_]+)) .*/i)){return s.auto_join_text_reply;}else if(text.match(url_regexp)){return s.auto_join_text_url;}else if(text.match(/^((\\w+ed)|just) .*/im)){return s.auto_join_text_ed;}else if(text.match(/^(\\w*ing) .*/i)){return s.auto_join_text_ing;}else{return s.auto_join_text_default;}}function build_api_request(){var modpath=s.modpath,count=s.fetch===null?s.count:s.fetch,defaults={include_entities:1};if(s.list){return{host:s.twitter_api_url,url:\"/1.1/lists/statuses.json\",parameters:$.extend({},defaults,{list_id:s.list_id,slug:s.list,owner_screen_name:s.username,page:s.page,count:count,include_rts:s.retweets?1:0})};}else if(s.favorites){return{host:s.twitter_api_url,url:\"/1.1/favorites/list.json\",parameters:$.extend({},defaults,{list_id:s.list_id,screen_name:s.username,page:s.page,count:count})};}else if(s.query===null&&s.username.length===1){return{host:s.twitter_api_url,url:\"/1.1/statuses/user_timeline.json\",parameters:$.extend({},defaults,{screen_name:s.username,page:s.page,count:count,include_rts:s.retweets?1:0})};}else{var query=s.query||'from:'+s.username.join(' OR from:');return{host:s.twitter_search_url,url:\"/1.1/search/tweets.json\",parameters:$.extend({},defaults,{q:query,count:count})};}}function extract_avatar_url(item,secure){if(secure){return'user'in item?item.user.profile_image_url_https:extract_avatar_url(item,false).replace(/^http:\\/\\/[a-z0-9]{1,3}\\.twimg\\.com\\//,\"https://s3.amazonaws.com/twitter_production/\");}else{return item.profile_image_url||item.user.profile_image_url;}}// Convert twitter API objects into data available for\n// constructing each tweet <li> using a template\nfunction extract_template_data(item){var o={};o.item=item;o.source=item.source;// The actual user name is not returned by all Twitter APIs, so please do not file an issue if it is empty.\no.name=item.from_user_name||item.user.name;o.screen_name=item.from_user||item.user.screen_name;o.avatar_size=s.avatar_size;o.avatar_url=extract_avatar_url(item,document.location.protocol==='https:');o.retweet=typeof item.retweeted_status!='undefined';o.tweet_time=parse_date(item.created_at);o.join_text=s.join_text==\"auto\"?build_auto_join_text(item.text):s.join_text;o.tweet_id=item.id_str;o.twitter_base=\"http://\"+s.twitter_url+\"/\";o.user_url=o.twitter_base+o.screen_name;o.tweet_url=o.user_url+\"/status/\"+o.tweet_id;o.reply_url=o.twitter_base+\"intent/tweet?in_reply_to=\"+o.tweet_id;o.retweet_url=o.twitter_base+\"intent/retweet?tweet_id=\"+o.tweet_id;o.favorite_url=o.twitter_base+\"intent/favorite?tweet_id=\"+o.tweet_id;o.retweeted_screen_name=o.retweet&&item.retweeted_status.user.screen_name;o.tweet_relative_time=relative_time(o.tweet_time);o.entities=item.entities?(item.entities.urls||[]).concat(item.entities.media||[]):[];o.tweet_raw_text=o.retweet?'RT @'+o.retweeted_screen_name+' '+item.retweeted_status.text:item.text;// avoid '...' in long retweets\no.tweet_text=$([linkURLs(o.tweet_raw_text,o.entities)]).linkUser().linkHash()[0];o.tweet_text_fancy=$([o.tweet_text]).makeHeart()[0];// Default spans, and pre-formatted blocks for common layouts\no.user=t('<a class=\"tweet_user\" href=\"{user_url}\">{screen_name}</a>',o);o.join=s.join_text?t(' <span class=\"tweet_join\">{join_text}</span> ',o):' ';o.avatar=o.avatar_size?t('<a class=\"tweet_avatar\" href=\"{user_url}\"><img src=\"{avatar_url}\" height=\"{avatar_size}\" width=\"{avatar_size}\" alt=\"{screen_name}\\'s avatar\" title=\"{screen_name}\\'s avatar\" border=\"0\"/></a>',o):'';o.time=t('<span class=\"tweet_time\"><a href=\"{tweet_url}\" title=\"view tweet on twitter\">{tweet_relative_time}</a></span>',o);o.text=t('<span class=\"tweet_text\">{tweet_text_fancy}</span>',o);o.reply_action=t('<a class=\"tweet_action tweet_reply\" href=\"{reply_url}\">reply</a>',o);o.retweet_action=t('<a class=\"tweet_action tweet_retweet\" href=\"{retweet_url}\">retweet</a>',o);o.favorite_action=t('<a class=\"tweet_action tweet_favorite\" href=\"{favorite_url}\">favorite</a>',o);return o;}return this.each(function(i,widget){var list=$('<ul class=\"tweet_list\">');var intro='<p class=\"tweet_intro\">'+s.intro_text+'</p>';var outro='<p class=\"tweet_outro\">'+s.outro_text+'</p>';var loading=$('<p class=\"loading\">'+s.loading_text+'</p>');if(s.username&&typeof s.username==\"string\"){s.username=[s.username];}$(widget).unbind(\"tweet:load\").bind(\"tweet:load\",function(){if(s.loading_text)$(widget).empty().append(loading);$.ajax({dataType:\"json\",type:\"post\",async:false,url:s.modpath||\"/twitter/\",data:{request:build_api_request()},success:function(data,status){if(data.message){console.log(data.message);}var response=data;$(widget).empty().append(list);if(s.intro_text)list.before(intro);list.empty();/*\t\t\t\t\t\tif(response.statuses !== undefined) {\n\t\t\t\t\t\t\tresp = response.statuses;\n\t\t\t\t\t\t} else if(response.results !== undefined) {\n\t\t\t\t\t\t\tresp = response.results;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresp = response;\n\t\t\t\t\t\t}*/resp=response;var tweets=$.map(resp,extract_template_data);tweets=$.grep(tweets,s.filter).sort(s.comparator).slice(0,s.count);list.append($.map(tweets,function(o){return\"<li>\"+t(s.template,o)+\"</li>\";}).join('')).children('li:first').addClass('tweet_first').end().children('li:odd').addClass('tweet_even').end().children('li:even').addClass('tweet_odd');if(s.outro_text)list.after(outro);$(widget).trigger(\"loaded\").trigger(tweets?\"empty\":\"full\");if(s.refresh_interval){window.setTimeout(function(){$(widget).trigger(\"tweet:load\");},1000*s.refresh_interval);}}});}).trigger(\"tweet:load\");});};});","map":{"version":3,"names":["factory","define","amd","jQuery","$","fn","tweet","o","s","extend","modpath","username","list_id","list","favorites","query","avatar_size","count","fetch","page","retweets","intro_text","outro_text","join_text","auto_join_text_default","auto_join_text_ed","auto_join_text_ing","auto_join_text_reply","auto_join_text_url","loading_text","refresh_interval","twitter_url","twitter_api_url","twitter_search_url","template","comparator","tweet1","tweet2","filter","url_regexp","t","info","result","key","val","replace","RegExp","replacer","regex","replacement","returning","each","push","escapeHTML","linkUser","linkHash","length","join","makeHeart","linkURLs","text","entities","match","url","test","i","entity","expanded_url","display_url","parse_date","date_str","Date","parse","relative_time","date","relative_to","arguments","delta","parseInt","getTime","r","toString","build_auto_join_text","build_api_request","defaults","include_entities","host","parameters","slug","owner_screen_name","include_rts","screen_name","q","extract_avatar_url","item","secure","user","profile_image_url_https","profile_image_url","extract_template_data","source","name","from_user_name","from_user","avatar_url","document","location","protocol","retweet","retweeted_status","tweet_time","created_at","tweet_id","id_str","twitter_base","user_url","tweet_url","reply_url","retweet_url","favorite_url","retweeted_screen_name","tweet_relative_time","urls","concat","media","tweet_raw_text","tweet_text","tweet_text_fancy","avatar","time","reply_action","retweet_action","favorite_action","widget","intro","outro","loading","unbind","bind","empty","append","ajax","dataType","type","async","data","request","success","status","message","console","log","response","before","resp","tweets","map","grep","sort","slice","children","addClass","end","after","trigger","window","setTimeout"],"sources":["/Users/binli/Documents/TravelWebsite/travel_website/src/js/jquery.tweet.js"],"sourcesContent":["// jquery.tweet.js - See http://tweet.seaofclouds.com/ or https://github.com/seaofclouds/tweet for more info\n// Copyright (c) 2008-2012 Todd Matthews & Steve Purcell\n// Modified by Stan Scates for https://github.com/StanScates/Tweet.js-Mod\n\n(function (factory) {\n\tif (typeof define === 'function' && define.amd)\n\tdefine(['jquery'], factory); // AMD support for RequireJS etc.\n\telse\n\tfactory(jQuery);\n}(function ($) {\n\t$.fn.tweet = function(o){\n\t\tvar s = $.extend({\n\t\t\tmodpath: \"php/twitter/cws_tweet.php\",\t\t\t\t// [string]\t relative URL to Tweet.js mod (see https://github.com/StanScates/Tweet.js-Mod)\n\t\t\tusername: null,\t\t\t\t\t\t\t\t\t\t\t\t\t// [string or array] required unless using the 'query' option; one or more twitter screen names (use 'list' option for multiple names, where possible)\n\t\t\tlist_id: null,\t\t\t\t\t\t\t\t\t\t\t\t\t// [integer]\tID of list to fetch when using list functionality\n\t\t\tlist: null,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// [string]\t optional slug of list belonging to username\n\t\t\tfavorites: false,\t\t\t\t\t\t\t\t\t\t\t\t// [boolean]\tdisplay the user's favorites instead of his tweets\n\t\t\tquery: null,\t\t\t\t\t\t\t\t\t\t\t\t\t\t// [string]\t optional search query (see also: http://search.twitter.com/operators)\n\t\t\tavatar_size: null,\t\t\t\t\t\t\t\t\t\t\t// [integer]\theight and width of avatar if displayed (48px max)\n\t\t\tcount: 3,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// [integer]\thow many tweets to display?\n\t\t\tfetch: null,\t\t\t\t\t\t\t\t\t\t\t\t\t\t// [integer]\thow many tweets to fetch via the API (set this higher than 'count' if using the 'filter' option)\n\t\t\tpage: 1,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// [integer]\twhich page of results to fetch (if count != fetch, you'll get unexpected results)\n\t\t\tretweets: true,\t\t\t\t\t\t\t\t\t\t\t\t\t// [boolean]\twhether to fetch (official) retweets (not supported in all display modes)\n\t\t\tintro_text: null,\t\t\t\t\t\t\t\t\t\t\t\t// [string]\t do you want text BEFORE your your tweets?\n\t\t\toutro_text: null,\t\t\t\t\t\t\t\t\t\t\t\t// [string]\t do you want text AFTER your tweets?\n\t\t\tjoin_text:\tnull,\t\t\t\t\t\t\t\t\t\t\t\t// [string]\t optional text in between date and tweet, try setting to \"auto\"\n\t\t\tauto_join_text_default: \"i said,\",\t\t\t// [string]\t auto text for non verb: \"i said\" bullocks\n\t\t\tauto_join_text_ed: \"i\",\t\t\t\t\t\t\t\t\t// [string]\t auto text for past tense: \"i\" surfed\n\t\t\tauto_join_text_ing: \"i am\",\t\t\t\t\t\t\t// [string]\t auto tense for present tense: \"i was\" surfing\n\t\t\tauto_join_text_reply: \"i replied to\",\t\t// [string]\t auto tense for replies: \"i replied to\" @someone \"with\"\n\t\t\tauto_join_text_url: \"i was looking at\",\t// [string]\t auto tense for urls: \"i was looking at\" http:...\n\t\t\tloading_text: null,\t\t\t\t\t\t\t\t\t\t\t// [string]\t optional loading text, displayed while tweets load\n\t\t\trefresh_interval: null ,\t\t\t\t\t\t\t\t// [integer]\toptional number of seconds after which to reload tweets\n\t\t\ttwitter_url: \"twitter.com\",\t\t\t\t\t\t\t// [string]\t custom twitter url, if any (apigee, etc.)\n\t\t\ttwitter_api_url: \"api.twitter.com\",\t\t\t// [string]\t custom twitter api url, if any (apigee, etc.)\n\t\t\ttwitter_search_url: \"api.twitter.com\", \t// [string]\t custom twitter search url, if any (apigee, etc.)\n\t\t\ttemplate: \"{avatar}{time}{join}{text}\",\t// [string or function] template used to construct each tweet <li> - see code for available vars\n\t\t\tcomparator: function(tweet1, tweet2) {\t// [function] comparator used to sort tweets (see Array.sort)\n\t\t\t\treturn tweet2[\"tweet_time\"] - tweet1[\"tweet_time\"];\n\t\t\t},\n\t\t\tfilter: function(tweet) {\t\t\t\t\t\t\t\t// [function] whether or not to include a particular tweet (be sure to also set 'fetch')\n\t\t\t\treturn true;\n\t\t\t}\n\t\t// You can attach callbacks to the following events using jQuery's standard .bind() mechanism:\n\t\t//\t \"loaded\" -- triggered when tweets have been fetched and rendered\n\t\t}, o);\n\n\t\t// See http://daringfireball.net/2010/07/improved_regex_for_matching_urls\n\t\tvar url_regexp = /\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/gi;\n\n\t\t// Expand values inside simple string templates with {placeholders}\n\t\tfunction t(template, info) {\n\t\t\tif (typeof template === \"string\") {\n\t\t\t\tvar result = template;\n\t\t\t\tfor(var key in info) {\n\t\t\t\t\tvar val = info[key];\n\t\t\t\t\tresult = result.replace(new RegExp('{'+key+'}','g'), val === null ? '' : val);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else return template(info);\n\t\t}\n\t\t// Export the t function for use when passing a function as the 'template' option\n\t\t$.extend({tweet: {t: t}});\n\n\t\tfunction replacer (regex, replacement) {\n\t\t\treturn function() {\n\t\t\t\tvar returning = [];\n\t\t\t\tthis.each(function() {\n\t\t\t\t\treturning.push(this.replace(regex, replacement));\n\t\t\t\t});\n\t\t\t\treturn $(returning);\n\t\t\t};\n\t\t}\n\n\t\tfunction escapeHTML(s) {\n\t\t\treturn s.replace(/</g,\"&lt;\").replace(/>/g,\"^&gt;\");\n\t\t}\n\n\t\t$.fn.extend({\n\t\t\tlinkUser: replacer(/(^|[\\W])@(\\w+)/gi, \"$1<span class=\\\"at\\\">@</span><a href=\\\"http://\"+s.twitter_url+\"/$2\\\">$2</a>\"),\n\t\t\t// Support various latin1 (\\u00**) and arabic (\\u06**) alphanumeric chars\n\t\t\tlinkHash: replacer(/(?:^| )[\\#]+([\\w\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u00ff\\u0600-\\u06ff]+)/gi,\n\t\t\t\t' <a href=\"https://twitter.com/search?q=%23$1'+((s.username && s.username.length == 1 && !s.list) ? '&from='+s.username.join(\"%2BOR%2B\") : '')+'\" class=\"tweet_hashtag\">#$1</a>'),\n\t\t\tmakeHeart: replacer(/(&lt;)+[3]/gi, \"<tt class='heart'>&#x2665;</tt>\")\n\t\t});\n\n\t\tfunction linkURLs(text, entities) {\n\t\t\treturn text.replace(url_regexp, function(match) {\n\t\t\t\tvar url = (/^[a-z]+:/i).test(match) ? match : \"http://\"+match;\n\t\t\t\tvar text = match;\n\t\t\t\tfor(var i = 0; i < entities.length; ++i) {\n\t\t\t\t\tvar entity = entities[i];\n\t\t\t\t\tif (entity.url == url && entity.expanded_url) {\n\t\t\t\t\t\turl = entity.expanded_url;\n\t\t\t\t\t\ttext = entity.display_url;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn \"<a href=\\\"\"+escapeHTML(url)+\"\\\">\"+escapeHTML(text)+\"</a>\";\n\t\t\t});\n\t\t}\n\n\t\tfunction parse_date(date_str) {\n\t\t\t// The non-search twitter APIs return inconsistently-formatted dates, which Date.parse\n\t\t\t// cannot handle in IE. We therefore perform the following transformation:\n\t\t\t// \"Wed Apr 29 08:53:31 +0000 2009\" => \"Wed, Apr 29 2009 08:53:31 +0000\"\n\t\t\treturn Date.parse(date_str.replace(/^([a-z]{3})( [a-z]{3} \\d\\d?)(.*)( \\d{4})$/i, '$1,$2$4$3'));\n\t\t}\n\n\t\tfunction relative_time(date) {\n\t\t\tvar relative_to = (arguments.length > 1) ? arguments[1] : new Date();\n\t\t\tvar delta = parseInt((relative_to.getTime() - date) / 1000, 10);\n\t\t\tvar r = '';\n\t\t\tif (delta < 1) {\n\t\t\t\tr = 'just now';\n\t\t\t} else if (delta < 60) {\n\t\t\t\tr = delta + ' seconds ago';\n\t\t\t} else if(delta < 120) {\n\t\t\t\tr = 'about a minute ago';\n\t\t\t} else if(delta < (45*60)) {\n\t\t\t\tr = 'about ' + (parseInt(delta / 60, 10)).toString() + ' minutes ago';\n\t\t\t} else if(delta < (2*60*60)) {\n\t\t\t\tr = 'about an hour ago';\n\t\t\t} else if(delta < (24*60*60)) {\n\t\t\t\tr = 'about ' + (parseInt(delta / 3600, 10)).toString() + ' hours ago';\n\t\t\t} else if(delta < (48*60*60)) {\n\t\t\t\tr = 'about a day ago';\n\t\t\t} else {\n\t\t\t\tr = 'about ' + (parseInt(delta / 86400, 10)).toString() + ' days ago';\n\t\t\t}\n\t\t\treturn r;\n\t\t}\n\n\t\tfunction build_auto_join_text(text) {\n\t\t\tif (text.match(/^(@([A-Za-z0-9-_]+)) .*/i)) {\n\t\t\t\treturn s.auto_join_text_reply;\n\t\t\t} else if (text.match(url_regexp)) {\n\t\t\t\treturn s.auto_join_text_url;\n\t\t\t} else if (text.match(/^((\\w+ed)|just) .*/im)) {\n\t\t\t\treturn s.auto_join_text_ed;\n\t\t\t} else if (text.match(/^(\\w*ing) .*/i)) {\n\t\t\t\treturn s.auto_join_text_ing;\n\t\t\t} else {\n\t\t\t\treturn s.auto_join_text_default;\n\t\t\t}\n\t\t}\n\n\t\tfunction build_api_request() {\n\t\t\tvar modpath = s.modpath,\n\t\t\t\tcount = (s.fetch === null) ? s.count : s.fetch,\n\t\t\t\tdefaults = {\n\t\t\t\t\tinclude_entities: 1\n\t\t\t\t};\n\n\t\t\tif (s.list) {\n\t\t\t\treturn {\n\t\t\t\t\thost: s.twitter_api_url,\n\t\t\t\t\turl: \"/1.1/lists/statuses.json\",\n\t\t\t\t\tparameters: $.extend({}, defaults, {\n\t\t\t\t\t\tlist_id: s.list_id,\n\t\t\t\t\t\tslug: s.list,\n\t\t\t\t\t\towner_screen_name: s.username,\n\t\t\t\t\t\tpage: s.page,\n\t\t\t\t\t\tcount: count,\n\t\t\t\t\t\tinclude_rts: (s.retweets ? 1 : 0)\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t} else if (s.favorites) {\n\t\t\t\treturn {\n\t\t\t\t\thost: s.twitter_api_url,\n\t\t\t\t\turl: \"/1.1/favorites/list.json\",\n\t\t\t\t\tparameters: $.extend({}, defaults, {\n\t\t\t\t\t\tlist_id: s.list_id,\n\t\t\t\t\t\tscreen_name: s.username,\n\t\t\t\t\t\tpage: s.page,\n\t\t\t\t\t\tcount: count\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t} else if (s.query === null && s.username.length === 1) {\n\t\t\t\treturn {\n\t\t\t\t\thost: s.twitter_api_url,\n\t\t\t\t\turl: \"/1.1/statuses/user_timeline.json\",\n\t\t\t\t\tparameters: $.extend({}, defaults, {\n\t\t\t\t\t\tscreen_name: s.username,\n\t\t\t\t\t\tpage: s.page,\n\t\t\t\t\t\tcount: count,\n\t\t\t\t\t\tinclude_rts: (s.retweets ? 1 : 0)\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tvar query = (s.query || 'from:'+s.username.join(' OR from:'));\n\t\t\t\treturn {\n\t\t\t\t\thost: s.twitter_search_url,\n\t\t\t\t\turl: \"/1.1/search/tweets.json\",\n\t\t\t\t\tparameters: $.extend({}, defaults, {\n\t\t\t\t\t\tq: query,\n\t\t\t\t\t\tcount: count\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tfunction extract_avatar_url(item, secure) {\n\t\t\tif (secure) {\n\t\t\t\treturn ('user' in item) ?\n\t\t\t\t\titem.user.profile_image_url_https :\n\t\t\t\t\textract_avatar_url(item, false).\n\t\t\t\t\treplace(/^http:\\/\\/[a-z0-9]{1,3}\\.twimg\\.com\\//, \"https://s3.amazonaws.com/twitter_production/\");\n\t\t\t} else {\n\t\t\t\treturn item.profile_image_url || item.user.profile_image_url;\n\t\t\t}\n\t\t}\n\n\t\t// Convert twitter API objects into data available for\n\t\t// constructing each tweet <li> using a template\n\t\tfunction extract_template_data(item) {\n\t\t\tvar o = {};\n\t\t\to.item = item;\n\t\t\to.source = item.source;\n\t\t\t// The actual user name is not returned by all Twitter APIs, so please do not file an issue if it is empty.\n\t\t\to.name = item.from_user_name || item.user.name;\n\t\t\to.screen_name = item.from_user || item.user.screen_name;\n\t\t\to.avatar_size = s.avatar_size;\n\t\t\to.avatar_url = extract_avatar_url(item, (document.location.protocol === 'https:'));\n\t\t\to.retweet = typeof(item.retweeted_status) != 'undefined';\n\t\t\to.tweet_time = parse_date(item.created_at);\n\t\t\to.join_text = s.join_text == \"auto\" ? build_auto_join_text(item.text) : s.join_text;\n\t\t\to.tweet_id = item.id_str;\n\t\t\to.twitter_base = \"http://\"+s.twitter_url+\"/\";\n\t\t\to.user_url = o.twitter_base+o.screen_name;\n\t\t\to.tweet_url = o.user_url+\"/status/\"+o.tweet_id;\n\t\t\to.reply_url = o.twitter_base+\"intent/tweet?in_reply_to=\"+o.tweet_id;\n\t\t\to.retweet_url = o.twitter_base+\"intent/retweet?tweet_id=\"+o.tweet_id;\n\t\t\to.favorite_url = o.twitter_base+\"intent/favorite?tweet_id=\"+o.tweet_id;\n\t\t\to.retweeted_screen_name = o.retweet && item.retweeted_status.user.screen_name;\n\t\t\to.tweet_relative_time = relative_time(o.tweet_time);\n\t\t\to.entities = item.entities ? (item.entities.urls || []).concat(item.entities.media || []) : [];\n\t\t\to.tweet_raw_text = o.retweet ? ('RT @'+o.retweeted_screen_name+' '+item.retweeted_status.text) : item.text; // avoid '...' in long retweets\n\t\t\to.tweet_text = $([linkURLs(o.tweet_raw_text, o.entities)]).linkUser().linkHash()[0];\n\t\t\to.tweet_text_fancy = $([o.tweet_text]).makeHeart()[0];\n\n\t\t\t// Default spans, and pre-formatted blocks for common layouts\n\t\t\to.user = t('<a class=\"tweet_user\" href=\"{user_url}\">{screen_name}</a>', o);\n\t\t\to.join = s.join_text ? t(' <span class=\"tweet_join\">{join_text}</span> ', o) : ' ';\n\t\t\to.avatar = o.avatar_size ?\n\t\t\t\tt('<a class=\"tweet_avatar\" href=\"{user_url}\"><img src=\"{avatar_url}\" height=\"{avatar_size}\" width=\"{avatar_size}\" alt=\"{screen_name}\\'s avatar\" title=\"{screen_name}\\'s avatar\" border=\"0\"/></a>', o) : '';\n\t\t\to.time = t('<span class=\"tweet_time\"><a href=\"{tweet_url}\" title=\"view tweet on twitter\">{tweet_relative_time}</a></span>', o);\n\t\t\to.text = t('<span class=\"tweet_text\">{tweet_text_fancy}</span>', o);\n\t\t\to.reply_action = t('<a class=\"tweet_action tweet_reply\" href=\"{reply_url}\">reply</a>', o);\n\t\t\to.retweet_action = t('<a class=\"tweet_action tweet_retweet\" href=\"{retweet_url}\">retweet</a>', o);\n\t\t\to.favorite_action = t('<a class=\"tweet_action tweet_favorite\" href=\"{favorite_url}\">favorite</a>', o);\n\t\t\treturn o;\n\t\t}\n\n\t\treturn this.each(function(i, widget){\n\t\t\tvar list = $('<ul class=\"tweet_list\">');\n\t\t\tvar intro = '<p class=\"tweet_intro\">'+s.intro_text+'</p>';\n\t\t\tvar outro = '<p class=\"tweet_outro\">'+s.outro_text+'</p>';\n\t\t\tvar loading = $('<p class=\"loading\">'+s.loading_text+'</p>');\n\n\t\t\tif(s.username && typeof(s.username) == \"string\"){\n\t\t\t\ts.username = [s.username];\n\t\t\t}\n\n\t\t\t$(widget).unbind(\"tweet:load\").bind(\"tweet:load\", function(){\n\t\t\t\tif (s.loading_text) $(widget).empty().append(loading);\n\n\t\t\t\t$.ajax({\n\t\t\t\t\tdataType: \"json\",\n\t\t\t\t\ttype: \"post\",\n\t\t\t\t\tasync: false,\n\t\t\t\t\turl: s.modpath || \"/twitter/\",\n\t\t\t\t\tdata: { request: build_api_request() },\n\t\t\t\t\tsuccess: function(data, status) {\n\n\t\t\t\t\t\tif(data.message) {\n\t\t\t\t\t\t\tconsole.log(data.message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar response = data;\n\t\t\t\t\t\t$(widget).empty().append(list);\n\t\t\t\t\t\tif (s.intro_text) list.before(intro);\n\t\t\t\t\t\tlist.empty();\n\n/*\t\t\t\t\t\tif(response.statuses !== undefined) {\n\t\t\t\t\t\t\tresp = response.statuses;\n\t\t\t\t\t\t} else if(response.results !== undefined) {\n\t\t\t\t\t\t\tresp = response.results;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresp = response;\n\t\t\t\t\t\t}*/\n\t\t\t\t\t\tresp = response;\n\n\t\t\t\t\t\tvar tweets = $.map(resp, extract_template_data);\n\t\t\t\t\t\t\ttweets = $.grep(tweets, s.filter).sort(s.comparator).slice(0, s.count);\n\n\t\t\t\t\t\tlist.append($.map(tweets, function(o) { return \"<li>\" + t(s.template, o) + \"</li>\"; }).join('')).\n\t\t\t\t\t\t\tchildren('li:first').addClass('tweet_first').end().\n\t\t\t\t\t\t\tchildren('li:odd').addClass('tweet_even').end().\n\t\t\t\t\t\t\tchildren('li:even').addClass('tweet_odd');\n\n\t\t\t\t\t\tif (s.outro_text) list.after(outro);\n\t\t\t\t\t\t$(widget).trigger(\"loaded\").trigger((tweets ? \"empty\" : \"full\"));\n\t\t\t\t\t\tif (s.refresh_interval) {\n\t\t\t\t\t\t\twindow.setTimeout(function() { $(widget).trigger(\"tweet:load\"); }, 1000 * s.refresh_interval);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}).trigger(\"tweet:load\");\n\t\t});\n\t};\n}));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}